===================
Try-except statements
===================

try
  foo();
except (E_TYPE)
  return 0;
endtry

---

(program
  (try
    (assignment_expr
      (conditional_expr
        (unary_expr
          (postfix_expr
            (identifier)
            (arglist)))))
    (except
      (ERR)
      (return
        (assignment_expr
          (conditional_expr
            (unary_expr
              (postfix_expr
                (primary_expr
                  (INTEGER))))))))))

===================
Try-except with any
===================

try
  foo();
except (ANY)
  return "error";
endtry

---

(program
  (try
    (assignment_expr
      (conditional_expr
        (unary_expr
          (postfix_expr
            (identifier)
            (arglist)))))
    (except
      (return
        (assignment_expr
          (conditional_expr
            (unary_expr
              (postfix_expr
                (primary_expr
                  (STRING))))))))))

===================
Try-except with label
===================

try
  foo();
except handler (E_TYPE)
  return "handled";
endtry

---

(program
  (try
    (assignment_expr
      (conditional_expr
        (unary_expr
          (postfix_expr
            (identifier)
            (arglist)))))
    (except
      (identifier)
      (ERR)
      (return
        (assignment_expr
          (conditional_expr
            (unary_expr
              (postfix_expr
                (primary_expr
                  (STRING))))))))))

===================
Try-except with multiple handlers
===================

try
  foo();
except (E_TYPE, E_DIV)
  return 0;
except (ANY)
  return -1;
endtry

---

(program
  (try
    (assignment_expr
      (conditional_expr
        (unary_expr
          (postfix_expr
            (identifier)
            (arglist)))))
    (except
      (ERR)
      (ERR)
      (return
        (assignment_expr
          (conditional_expr
            (unary_expr
              (postfix_expr
                (primary_expr
                  (INTEGER))))))))
    (except
      (return
        (assignment_expr
          (conditional_expr
            (unary_expr
              (postfix_expr
                (primary_expr
                  (INTEGER))))))))))

===================
Try-except with finally
===================

try
  foo();
except (E_TYPE)
  return 0;
finally
  cleanup();
endtry

---

(program
  (try
    (assignment_expr
      (conditional_expr
        (unary_expr
          (postfix_expr
            (identifier)
            (arglist)))))
    (except
      (ERR)
      (return
        (assignment_expr
          (conditional_expr
            (unary_expr
              (postfix_expr
                (primary_expr
                  (INTEGER))))))))
    (assignment_expr
      (conditional_expr
        (unary_expr
          (postfix_expr
            (identifier)
            (arglist)))))))

===================
Try expression simple
===================

x = `foo() ! ANY => 0';

---

(program
  (assignment_expr
    (identifier)
    (assignment_expr
      (conditional_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (try_expr
                (assignment_expr
                  (conditional_expr
                    (unary_expr
                      (postfix_expr
                        (identifier)
                        (arglist)))))
                (assignment_expr
                  (conditional_expr
                    (unary_expr
                      (postfix_expr
                        (primary_expr
                          (INTEGER))))))))))))))

===================
Try expression with error list
===================

x = `foo() ! E_TYPE, E_ARGS => -1';

---

(program
  (assignment_expr
    (identifier)
    (assignment_expr
      (conditional_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (try_expr
                (assignment_expr
                  (conditional_expr
                    (unary_expr
                      (postfix_expr
                        (identifier)
                        (arglist)))))
                (ERR)
                (ERR)
                (assignment_expr
                  (conditional_expr
                    (unary_expr
                      (postfix_expr
                        (primary_expr
                          (INTEGER))))))))))))))

===================
Try expression without handler
===================

x = `foo() ! ANY';

---

(program
  (assignment_expr
    (identifier)
    (assignment_expr
      (conditional_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (try_expr
                (assignment_expr
                  (conditional_expr
                    (unary_expr
                      (postfix_expr
                        (identifier)
                        (arglist)))))))))))))
