===================
Basic scatter assignment
===================

{a, b, c} = some_list;

---

(program
  (assignment_expr
    left: (scatter_pattern
      parameters: (parameter_list
        (parameter
          (scatter_target
            name: (identifier)))
        (parameter
          (scatter_target
            name: (identifier)))
        (parameter
          (scatter_target
            name: (identifier)))))
    right: (identifier)))

===================
Scatter assignment in let statement
===================

let {first, second, @rest} = my_list;

---

(program
  (local_assignment
    target: (scatter_pattern
      parameters: (parameter_list
        (parameter
          (scatter_target
            name: (identifier)))
        (parameter
          (scatter_target
            name: (identifier)))
        (parameter
          (scatter_rest
            name: (identifier)))))
    value: (identifier)))

===================
Scatter assignment in const statement
===================

const {x, ?y = 10, @remaining} = data;

---

(program
  (const_assignment
    target: (scatter_pattern
      parameters: (parameter_list
        (parameter
          (scatter_target
            name: (identifier)))
        (parameter
          (scatter_optional
            name: (identifier)
            default: (INTEGER)))
        (parameter
          (scatter_rest
            name: (identifier)))))
    value: (identifier)))

===================
Lambda with scatter parameters
===================

let handler = {?code = E_NONE, @args} => handle(code, args);

---

(program
  (local_assignment
    target: (identifier)
    value: (lambda_expr
      params: (lambda_params
        (parameter_list
          (parameter
            (scatter_optional
              name: (identifier)
              default: (identifier)))
          (parameter
            (scatter_rest
              name: (identifier)))))
      body: (call
        function: (identifier)
        arguments: (arglist
          arguments: (argument
            value: (identifier))
          arguments: (argument
            value: (identifier)))))))
