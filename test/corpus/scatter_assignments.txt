===================
Basic scatter assignment
===================

{a, b, c} = some_list;

---

(program
  (statement
    (expression_statement
      expression: (expression
        (assignment_operation
          left: (binding_pattern
            name: (identifier)
            name: (identifier)
            name: (identifier))
          right: (expression
            (identifier)))))))

===================
Scatter assignment in let statement
===================

let {first, second, @rest} = my_list;

---

(program
  (statement
    (assignment_statement
      (let_statement
        target: (binding_pattern
          name: (identifier)
          name: (identifier)
          (binding_rest
            name: (identifier)))
        expression: (expression
          (identifier))))))

===================
Scatter assignment in const statement
===================

const {x, ?y = 10, @remaining} = data;

---

(program
  (statement
    (assignment_statement
      (const_statement
        target: (binding_pattern
          name: (identifier)
          (binding_optional
            name: (identifier)
            default: (expression
              (integer)))
          (binding_rest
            name: (identifier)))
        expression: (expression
          (identifier))))))

===================
Lambda with scatter parameters
===================

let handler = {?code = E_NONE, @args} => handle(code, args);

---

(program
  (statement
    (assignment_statement
      (let_statement
        target: (identifier)
        expression: (expression
          (lambda
            parameters: (lambda_parameters
              (binding_optional
                name: (identifier)
                default: (expression
                  (identifier)))
              (binding_rest
                name: (identifier)))
            body: (expression
              (call
                function: (identifier)
                arguments: (expression
                  (identifier))
                arguments: (expression
                  (identifier))))))))))
