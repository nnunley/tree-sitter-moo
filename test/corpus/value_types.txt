===================
Atomic Values - Numbers
===================

42;
-17;
3.14159;
.5;
5.0;
1e10;
1.5e-3;
2.718E2;
2.718E+2;
-2.718E+2;
-2.718E2;

---

(program
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (INTEGER)))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (INTEGER)))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (FLOAT)))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (FLOAT)))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (FLOAT)))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (FLOAT)))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (FLOAT)))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (FLOAT)))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (FLOAT)))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (FLOAT)))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (FLOAT))))))))

===================
Atomic Values - Strings and Identifiers
===================

"hello world";
'single quoted';
"escaped \"quotes\"";
'escaped \'quotes\'';
my_identifier;
_underscore123;

---

(program
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (STRING)))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (STRING)))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (STRING)))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (STRING)))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (identifier)))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (identifier))))))))

===================
Object and System IDs
===================

#123;
#-456;
$system_prop;
'symbol;
true;
false;
$;

---

(program
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (objid
                (INTEGER))))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (objid
                (INTEGER))))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (sysprop
                (identifier))))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (symbol
                (identifier))))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (boolean)))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (boolean)))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (range_end))))))))

===================
Lists
===================

{};
{1, 2, 3};
{"a", "b", "c"};
{1, "mixed", #123};

---

(program
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (list)))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (list
                (assignment_expr
                  (conditional_expr
                    (binary_expr
                      (unary_expr
                        (postfix_expr
                          (primary_expr
                            (INTEGER)))))))
                (assignment_expr
                  (conditional_expr
                    (binary_expr
                      (unary_expr
                        (postfix_expr
                          (primary_expr
                            (INTEGER)))))))
                (assignment_expr
                  (conditional_expr
                    (binary_expr
                      (unary_expr
                        (postfix_expr
                          (primary_expr
                            (INTEGER))))))))))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (list
                (assignment_expr
                  (conditional_expr
                    (binary_expr
                      (unary_expr
                        (postfix_expr
                          (primary_expr
                            (STRING)))))))
                (assignment_expr
                  (conditional_expr
                    (binary_expr
                      (unary_expr
                        (postfix_expr
                          (primary_expr
                            (STRING)))))))
                (assignment_expr
                  (conditional_expr
                    (binary_expr
                      (unary_expr
                        (postfix_expr
                          (primary_expr
                            (STRING))))))))))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (list
                (assignment_expr
                  (conditional_expr
                    (binary_expr
                      (unary_expr
                        (postfix_expr
                          (primary_expr
                            (INTEGER)))))))
                (assignment_expr
                  (conditional_expr
                    (binary_expr
                      (unary_expr
                        (postfix_expr
                          (primary_expr
                            (STRING)))))))
                (assignment_expr
                  (conditional_expr
                    (binary_expr
                      (unary_expr
                        (postfix_expr
                          (primary_expr
                            (objid
                              (INTEGER))))))))))))))))

===================
Maps
===================

[];
[1 -> "one"];
["key" -> "value", "another" -> 123];

---

(program
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (map)))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (map
                (pair
                  (assignment_expr
                    (conditional_expr
                      (binary_expr
                        (unary_expr
                          (postfix_expr
                            (primary_expr
                              (INTEGER)))))))
                  (assignment_expr
                    (conditional_expr
                      (binary_expr
                        (unary_expr
                          (postfix_expr
                            (primary_expr
                              (STRING)))))))))))))))
  (assignment_expr
    (conditional_expr
      (binary_expr
        (unary_expr
          (postfix_expr
            (primary_expr
              (map
                (pair
                  (assignment_expr
                    (conditional_expr
                      (binary_expr
                        (unary_expr
                          (postfix_expr
                            (primary_expr
                              (STRING)))))))
                  (assignment_expr
                    (conditional_expr
                      (binary_expr
                        (unary_expr
                          (postfix_expr
                            (primary_expr
                              (STRING))))))))
                (pair
                  (assignment_expr
                    (conditional_expr
                      (binary_expr
                        (unary_expr
                          (postfix_expr
                            (primary_expr
                              (STRING)))))))
                  (assignment_expr
                    (conditional_expr
                      (binary_expr
                        (unary_expr
                          (postfix_expr
                            (primary_expr
                              (INTEGER))))))))))))))))
